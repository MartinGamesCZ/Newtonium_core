// @bun
import{FFIType as s,JSCallback as y,toArrayBuffer as a}from"bun:ffi";import{dlopen as v,FFIType as r}from"bun:ffi";function c(t){const{symbols:e}=v(t,{initialize:{args:[],returns:r.bool},run:{args:[],returns:r.void},create_window:{args:[r.cstring,r.cstring,r.cstring,r.function],returns:r.ptr},create_element:{args:[r.ptr,r.cstring,r.cstring,r.cstring],returns:r.void},append_child:{args:[r.ptr,r.cstring,r.ptr],returns:r.void},set_attribute:{args:[r.ptr,r.cstring,r.cstring,r.cstring,r.cstring],returns:r.void},add_event_listener:{args:[r.ptr,r.cstring,r.cstring,r.cstring],returns:r.void},remove_element:{args:[r.ptr,r.cstring],returns:r.void},set_styles:{args:[r.ptr,r.cstring,r.cstring],returns:r.void},get_attribute:{args:[r.ptr,r.cstring,r.cstring,r.cstring,r.cstring],returns:r.cstring}});return e}function n(t){return new Uint8Array([...new TextEncoder().encode(t),0])}self.onmessage=(t)=>{const e=c(t.data.lib_path),g=n(t.data.id),d=n(t.data.title),p=n(t.data.icon);e.initialize();const l=new y((m,_)=>{let i=new TextDecoder().decode(new Uint8Array(a(_))),o=new TextDecoder().decode(new Uint8Array(a(m))).substring(0,32);postMessage({e:"event",symbol_id:o,iid:o.startsWith("!!")?i:i.substring(0,32)})},{args:[s.cstring,s.cstring],returns:s.void}),u=e.create_window(d,p,g,l);postMessage({e:"ready",channel_ptr:u}),e.run(),postMessage({e:"close"})};

//# debugId=A577202E13EADF6264756E2164756E21
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL3dvcmtlcnMvcnVubmVyLnRzIiwgIi4uL3NyYy9mZmkudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbCiAgICAiaW1wb3J0IHtcbiAgQ0Z1bmN0aW9uLFxuICBkbG9wZW4sXG4gIEZGSVR5cGUsXG4gIEpTQ2FsbGJhY2ssXG4gIHJlYWQsXG4gIHRvQXJyYXlCdWZmZXIsXG4gIHR5cGUgUG9pbnRlcixcbn0gZnJvbSBcImJ1bjpmZmlcIjtcbmltcG9ydCB7IHJhbmRvbVVVSUQgfSBmcm9tIFwiY3J5cHRvXCI7XG5pbXBvcnQgeyBjcmVhdGVGRkksIHRvQ1N0cmluZyB9IGZyb20gXCIuLi9mZmlcIjtcblxuZGVjbGFyZSB2YXIgc2VsZjogV29ya2VyO1xuXG5zZWxmLm9ubWVzc2FnZSA9IChlKSA9PiB7XG4gIGNvbnN0IGNvcmUgPSBjcmVhdGVGRkkoZS5kYXRhLmxpYl9wYXRoKTtcblxuICBjb25zdCBpZCA9IHRvQ1N0cmluZyhlLmRhdGEuaWQpO1xuICBjb25zdCB0aXRsZSA9IHRvQ1N0cmluZyhlLmRhdGEudGl0bGUpO1xuICBjb25zdCBpY29uID0gdG9DU3RyaW5nKGUuZGF0YS5pY29uKTtcblxuICBjb3JlLmluaXRpYWxpemUoKTtcblxuICBjb25zdCBjYiA9IG5ldyBKU0NhbGxiYWNrKFxuICAgIChzeW1ib2xfaWQ6IFBvaW50ZXIsIGlpZDogUG9pbnRlcikgPT4ge1xuICAgICAgbGV0IGRlY19paWQgPSBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoXG4gICAgICAgIG5ldyBVaW50OEFycmF5KHRvQXJyYXlCdWZmZXIoaWlkKSlcbiAgICAgICk7XG4gICAgICBsZXQgc3ltYl9pZCA9IG5ldyBUZXh0RGVjb2RlcigpXG4gICAgICAgIC5kZWNvZGUobmV3IFVpbnQ4QXJyYXkodG9BcnJheUJ1ZmZlcihzeW1ib2xfaWQpKSlcbiAgICAgICAgLnN1YnN0cmluZygwLCAzMik7XG5cbiAgICAgIHBvc3RNZXNzYWdlKHtcbiAgICAgICAgZTogXCJldmVudFwiLFxuICAgICAgICBzeW1ib2xfaWQ6IHN5bWJfaWQsXG4gICAgICAgIGlpZDogc3ltYl9pZC5zdGFydHNXaXRoKFwiISFcIikgPyBkZWNfaWlkIDogZGVjX2lpZC5zdWJzdHJpbmcoMCwgMzIpLFxuICAgICAgfSk7XG4gICAgfSxcbiAgICB7XG4gICAgICBhcmdzOiBbRkZJVHlwZS5jc3RyaW5nLCBGRklUeXBlLmNzdHJpbmddLFxuICAgICAgcmV0dXJuczogRkZJVHlwZS52b2lkLFxuICAgIH1cbiAgKTtcblxuICBjb25zdCBjaGFubmVsX3B0ciA9IGNvcmUuY3JlYXRlX3dpbmRvdyh0aXRsZSwgaWNvbiwgaWQsIGNiKTtcblxuICBwb3N0TWVzc2FnZSh7XG4gICAgZTogXCJyZWFkeVwiLFxuICAgIGNoYW5uZWxfcHRyLFxuICB9KTtcblxuICBjb3JlLnJ1bigpO1xuXG4gIHBvc3RNZXNzYWdlKHtcbiAgICBlOiBcImNsb3NlXCIsXG4gIH0pO1xufTtcbiIsCiAgICAiaW1wb3J0IHsgZGxvcGVuLCBGRklUeXBlIH0gZnJvbSBcImJ1bjpmZmlcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUZGSShwYXRoOiBzdHJpbmcpIHtcbiAgY29uc3QgeyBzeW1ib2xzIH0gPSBkbG9wZW4ocGF0aCwge1xuICAgIGluaXRpYWxpemU6IHtcbiAgICAgIGFyZ3M6IFtdLFxuICAgICAgcmV0dXJuczogRkZJVHlwZS5ib29sLFxuICAgIH0sXG4gICAgcnVuOiB7XG4gICAgICBhcmdzOiBbXSxcbiAgICAgIHJldHVybnM6IEZGSVR5cGUudm9pZCxcbiAgICB9LFxuICAgIGNyZWF0ZV93aW5kb3c6IHtcbiAgICAgIGFyZ3M6IFtcbiAgICAgICAgRkZJVHlwZS5jc3RyaW5nLFxuICAgICAgICBGRklUeXBlLmNzdHJpbmcsXG4gICAgICAgIEZGSVR5cGUuY3N0cmluZyxcbiAgICAgICAgRkZJVHlwZS5mdW5jdGlvbixcbiAgICAgIF0sXG4gICAgICByZXR1cm5zOiBGRklUeXBlLnB0cixcbiAgICB9LFxuICAgIGNyZWF0ZV9lbGVtZW50OiB7XG4gICAgICBhcmdzOiBbRkZJVHlwZS5wdHIsIEZGSVR5cGUuY3N0cmluZywgRkZJVHlwZS5jc3RyaW5nLCBGRklUeXBlLmNzdHJpbmddLFxuICAgICAgcmV0dXJuczogRkZJVHlwZS52b2lkLFxuICAgIH0sXG4gICAgYXBwZW5kX2NoaWxkOiB7XG4gICAgICBhcmdzOiBbRkZJVHlwZS5wdHIsIEZGSVR5cGUuY3N0cmluZywgRkZJVHlwZS5wdHJdLFxuICAgICAgcmV0dXJuczogRkZJVHlwZS52b2lkLFxuICAgIH0sXG4gICAgc2V0X2F0dHJpYnV0ZToge1xuICAgICAgYXJnczogW1xuICAgICAgICBGRklUeXBlLnB0cixcbiAgICAgICAgRkZJVHlwZS5jc3RyaW5nLFxuICAgICAgICBGRklUeXBlLmNzdHJpbmcsXG4gICAgICAgIEZGSVR5cGUuY3N0cmluZyxcbiAgICAgICAgRkZJVHlwZS5jc3RyaW5nLFxuICAgICAgXSxcbiAgICAgIHJldHVybnM6IEZGSVR5cGUudm9pZCxcbiAgICB9LFxuICAgIGFkZF9ldmVudF9saXN0ZW5lcjoge1xuICAgICAgYXJnczogW0ZGSVR5cGUucHRyLCBGRklUeXBlLmNzdHJpbmcsIEZGSVR5cGUuY3N0cmluZywgRkZJVHlwZS5jc3RyaW5nXSxcbiAgICAgIHJldHVybnM6IEZGSVR5cGUudm9pZCxcbiAgICB9LFxuICAgIHJlbW92ZV9lbGVtZW50OiB7XG4gICAgICBhcmdzOiBbRkZJVHlwZS5wdHIsIEZGSVR5cGUuY3N0cmluZ10sXG4gICAgICByZXR1cm5zOiBGRklUeXBlLnZvaWQsXG4gICAgfSxcbiAgICBzZXRfc3R5bGVzOiB7XG4gICAgICBhcmdzOiBbRkZJVHlwZS5wdHIsIEZGSVR5cGUuY3N0cmluZywgRkZJVHlwZS5jc3RyaW5nXSxcbiAgICAgIHJldHVybnM6IEZGSVR5cGUudm9pZCxcbiAgICB9LFxuICAgIGdldF9hdHRyaWJ1dGU6IHtcbiAgICAgIGFyZ3M6IFtcbiAgICAgICAgRkZJVHlwZS5wdHIsXG4gICAgICAgIEZGSVR5cGUuY3N0cmluZyxcbiAgICAgICAgRkZJVHlwZS5jc3RyaW5nLFxuICAgICAgICBGRklUeXBlLmNzdHJpbmcsXG4gICAgICAgIEZGSVR5cGUuY3N0cmluZyxcbiAgICAgIF0sXG4gICAgICByZXR1cm5zOiBGRklUeXBlLmNzdHJpbmcsXG4gICAgfSxcbiAgfSk7XG5cbiAgcmV0dXJuIHN5bWJvbHM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b0NTdHJpbmcoc3RyOiBzdHJpbmcpIHtcbiAgcmV0dXJuIG5ldyBVaW50OEFycmF5KFsuLi5uZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoc3RyKSwgMF0pO1xufVxuIgogIF0sCiAgIm1hcHBpbmdzIjogIjtBQUFBLGtCQUdFLGdCQUNBLG1CQUVBLGdCQ05GLGlCQUFTLGFBQVEsZ0JBRVYsU0FBUyxDQUFTLENBQUMsRUFBYyxDQUN0QyxNQUFRLFdBQVksRUFBTyxFQUFNLENBQy9CLFdBQVksQ0FDVixLQUFNLENBQUMsRUFDUCxRQUFTLEVBQVEsSUFDbkIsRUFDQSxJQUFLLENBQ0gsS0FBTSxDQUFDLEVBQ1AsUUFBUyxFQUFRLElBQ25CLEVBQ0EsY0FBZSxDQUNiLEtBQU0sQ0FDSixFQUFRLFFBQ1IsRUFBUSxRQUNSLEVBQVEsUUFDUixFQUFRLFFBQ1YsRUFDQSxRQUFTLEVBQVEsR0FDbkIsRUFDQSxlQUFnQixDQUNkLEtBQU0sQ0FBQyxFQUFRLElBQUssRUFBUSxRQUFTLEVBQVEsUUFBUyxFQUFRLE9BQU8sRUFDckUsUUFBUyxFQUFRLElBQ25CLEVBQ0EsYUFBYyxDQUNaLEtBQU0sQ0FBQyxFQUFRLElBQUssRUFBUSxRQUFTLEVBQVEsR0FBRyxFQUNoRCxRQUFTLEVBQVEsSUFDbkIsRUFDQSxjQUFlLENBQ2IsS0FBTSxDQUNKLEVBQVEsSUFDUixFQUFRLFFBQ1IsRUFBUSxRQUNSLEVBQVEsUUFDUixFQUFRLE9BQ1YsRUFDQSxRQUFTLEVBQVEsSUFDbkIsRUFDQSxtQkFBb0IsQ0FDbEIsS0FBTSxDQUFDLEVBQVEsSUFBSyxFQUFRLFFBQVMsRUFBUSxRQUFTLEVBQVEsT0FBTyxFQUNyRSxRQUFTLEVBQVEsSUFDbkIsRUFDQSxlQUFnQixDQUNkLEtBQU0sQ0FBQyxFQUFRLElBQUssRUFBUSxPQUFPLEVBQ25DLFFBQVMsRUFBUSxJQUNuQixFQUNBLFdBQVksQ0FDVixLQUFNLENBQUMsRUFBUSxJQUFLLEVBQVEsUUFBUyxFQUFRLE9BQU8sRUFDcEQsUUFBUyxFQUFRLElBQ25CLEVBQ0EsY0FBZSxDQUNiLEtBQU0sQ0FDSixFQUFRLElBQ1IsRUFBUSxRQUNSLEVBQVEsUUFDUixFQUFRLFFBQ1IsRUFBUSxPQUNWLEVBQ0EsUUFBUyxFQUFRLE9BQ25CLENBQ0YsQ0FBQyxFQUVELE9BQU8sRUFHRixTQUFTLENBQVMsQ0FBQyxFQUFhLENBQ3JDLE9BQU8sSUFBSSxXQUFXLENBQUMsR0FBRyxJQUFJLFlBQVksRUFBRSxPQUFPLENBQUcsRUFBRyxDQUFDLENBQUMsRURyRDdELEtBQUssVUFBWSxDQUFDLElBQU0sQ0FDdEIsTUFBTSxFQUFPLEVBQVUsRUFBRSxLQUFLLFFBQVEsRUFFaEMsRUFBSyxFQUFVLEVBQUUsS0FBSyxFQUFFLEVBQ3hCLEVBQVEsRUFBVSxFQUFFLEtBQUssS0FBSyxFQUM5QixFQUFPLEVBQVUsRUFBRSxLQUFLLElBQUksRUFFbEMsRUFBSyxXQUFXLEVBRWhCLE1BQU0sRUFBSyxJQUFJLEVBQ2IsQ0FBQyxFQUFvQixJQUFpQixDQUNwQyxJQUFJLEVBQVUsSUFBSSxZQUFZLEVBQUUsT0FDOUIsSUFBSSxXQUFXLEVBQWMsQ0FBRyxDQUFDLENBQ25DLEVBQ0ksRUFBVSxJQUFJLFlBQVksRUFDM0IsT0FBTyxJQUFJLFdBQVcsRUFBYyxDQUFTLENBQUMsQ0FBQyxFQUMvQyxVQUFVLEVBQUcsRUFBRSxFQUVsQixZQUFZLENBQ1YsRUFBRyxRQUNILFVBQVcsRUFDWCxJQUFLLEVBQVEsV0FBVyxJQUFJLEVBQUksRUFBVSxFQUFRLFVBQVUsRUFBRyxFQUFFLENBQ25FLENBQUMsR0FFSCxDQUNFLEtBQU0sQ0FBQyxFQUFRLFFBQVMsRUFBUSxPQUFPLEVBQ3ZDLFFBQVMsRUFBUSxJQUNuQixDQUNGLEVBRU0sRUFBYyxFQUFLLGNBQWMsRUFBTyxFQUFNLEVBQUksQ0FBRSxFQUUxRCxZQUFZLENBQ1YsRUFBRyxRQUNILGFBQ0YsQ0FBQyxFQUVELEVBQUssSUFBSSxFQUVULFlBQVksQ0FDVixFQUFHLE9BQ0wsQ0FBQyIsCiAgImRlYnVnSWQiOiAiQTU3NzIwMkUxM0VBREY2MjY0NzU2RTIxNjQ3NTZFMjEiLAogICJuYW1lcyI6IFtdCn0=
